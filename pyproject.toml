[tool.poetry]
version = "0.2.222"
name = "p2g"
description = "Transpile python into cnc gcode."
authors = ["sac <sac@0x5ac.com>"]
readme = "readme.md" 
license = "MIT"
keywords = ["cnc", "gcode", "mill", "haas", "g-code", "probe", "vf"]
classifiers = [
"Development Status :: 3 - Alpha",
"Intended Audience :: Manufacturing",
"Intended Audience :: Other Audience",
"Topic :: Software Development :: Compilers",
"Programming Language :: Python",
]
repository = 'https://github.com/0x5ac/p2g'
homepage = 'https://github.com/0x5ac/p2g'
packages = [
    { include = "p2g",    format = "sdist"},

]
include = [ "p2g/doc/*"]
exclude = [ ".*stamp*" ] 
[tool.poetry.scripts]
p2g = "p2g.main:main"

[tool.poetry.dependencies]
python = ">= 3.10, < 4.0"
typeguard = "^3.0.2"
docopt = "^0.6.2"



[tool.poetry.group.dev.dependencies]
typeguard = "^3.0.2"
docopt = "^0.6.2"
rich = "^13.3.4"
vulture = "^2.7"
pylint = "^2.17.4"
pytest = {version = "^7.3.1"}
mypy = "^1.4.1"
deptry = "^0.12.0"
ssort = "^0.11.6"
pyright = "^1.1.316"
flake8-pyproject = "^1.2.3"
ruff = "^0.0.275"
update = "^0.0.1"
autopep8 = "^2.0.2"
tox = "^4.6.4"
pytest-cov = "^4.1.0"
wrapt = "^1.15.0"
dill = "^0.3.6"

[tool.deptry]
exclude = ['(examples|tests)/*']

[tool.pyright]

[tool.isort]
force_alphabetical_sort_within_sections = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
float_to_top = true
force_single_line = true
src_paths = ["p2g","tests","examples","tools"]

[tool.black]
line-length=90

[tool.autopep8]
max_line_length= 90
aggresive=10
in-place=true

[tool.mypy] 
ignore_missing_imports = true
check_untyped_defs = true
explicit_package_bases = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.vulture]
ignore_names = ['_visit*','[A-Z]*' ]

[tool.pylint]
init-import = false
disable = [
"unnecessary-dunder-call",
"import-outside-toplevel",
"abstract-method",
"missing-module-docstring",
"missing-function-docstring",
"missing-class-docstring"]

good-names = "_,fn,el,ns"

[tool.pytest.ini_options]
python_files = [ 'tests/*.py' ]
console_output_style="classic"
addopts=["--cov" , "--no-header", "-vv" ] 

[tool.coverage.report]
exclude_lines = [       "NotImplemented",
                        "AssertionError",
                        "for debug",
                        "no cover",
                        "@(abc\\.)?abstractmethod" ]

omit = ["tests/*.py",
        "examples/*.py"] 

[tool.flake8]
ignore="E203"

max-line-length = 90
[tool.ruff]
line-length = 90

################################################################################

[tool.tox]
legacy_tox_ini = """
    [tox]

    min_version = 4.0
    skip_missing_interpreters =  true
    env_list =
        py310
        py311
        py312        


    [testenv]
    allowlist_externals = make            
    deps = pytest
            pytest-cov
            rich
    commands = make test

    [testenv:lint]

    deps = pyright
            mypy
            pytype
            pylint
            vulture
            ruff
            flake8
            rich
    commands = make lint



"""
